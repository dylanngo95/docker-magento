version: '3.7'

services:
  nginx:
    image: nginx:1.16.1
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/nginx/local.crt:/var/www/ssl/local.crt
      - ./conf/nginx/local.key:/var/www/ssl/local.key
      - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./log/nginx:/var/log/nginx
      - ${PROJECT_PATH}:/var/www/html
    networks:
      - app

  php:
    build: './dockerfile/php-fpm'
    restart: always
    container_name: php
    volumes:
      - ./conf/php/php.ini:/usr/local/etc/php.ini
      - ${PROJECT_PATH}:/var/www/html
    networks:
      - app

  cron:
    build: './dockerfile/php-fpm'
    restart: always
    container_name: cron
    volumes:
      - ./conf/php/php.ini:/usr/local/etc/php.ini
      - ${PROJECT_PATH}:/var/www/html
    networks:
      - app

  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - ./backup:/var/backup
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8080:80
    networks:
      - app

  elasticsearch:
    image: elasticsearch:7.13.2
    container_name: elasticsearch
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      discovery.type: single-node
    networks:
      - app
networks:
  app:
    driver: bridge